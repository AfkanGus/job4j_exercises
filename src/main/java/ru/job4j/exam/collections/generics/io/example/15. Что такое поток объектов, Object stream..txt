15. Что такое поток объектов, Object stream.

 ObjectOutputStream превращает объект в его байтовое представление. ObjectInputStream восстанавливает объект из байтового представления в обычное.
Эти процессы называются сериализацией и десериализацией соответственно. С помощью этих операций можно сохранить объект (состояние объекта) в виде последовательности байт, удобной для передачи по сети, и восстановить эту последовательность байт обратно в объект, например, на другом компьютере. 
Классы ObjectInputStream и ObjectOutputStream наследуют классы InputStream / OutputStream и реализуют интерфейсы ObjectInput / ObjectOutput, которые, в свою очередь, наследуют интерфейсы DataInput / DataOutput.

Интерфейсы ObjectInput и ObjectOutput наследуют все методы интерфейсов DataInput и DataOutput, а также определяют методы readObject() и writeObject()
public class Car implements Serializable 
интерфейс Serializable. Это маркерный интерфейс, который не содержит никаких методов, он просто говорит JVM, что объект этого класса можно сериализовать, то есть сохранить в байтовом представлении.

private static final long serialVersionUID = 1L;
В переменной serialVersionUID хранится уникальный ключ, который при начале сериализации и окончании десериализации должен совпадать, то есть если на входе и выходе эти идентификаторы совпадают, значит объект восстановился точно в том же состоянии, в котором он был перед началом процесса трансформации.


Методы из интерфейса ObjectOutput

void close ()-Закрывает вызывающий поток вывода.
Последующие попытки вывести данные в этот
поток приведут к генерированию исключения типа
IOException


void flush() - Делает конечным состояние вывода, чтобы очистить
все буферы, в том числе и буферы вывода

void write(byte buffer[]) Записывает указанный массив байтов в вызывающий поток вывода


void write(byte buffer[], int смещение, int количество_байтов)
Записывает заданное количество байтов из
указанного массива buffer, начиная с позиции Ьиffеr[снещеняе]


void write(int Ь) - Записывает одиночный байт в вызывающий поток
вывода. Из указанного аргумента Ь выводится
только младший байт 

void writeObject(Object объект)- Записывает заданный объект в вызывающий поток вывода


KлaccObjectOutputStream
ObjectOutputStream(OutputStream поток_вывода) throws IOException
Аргумент поток_вывода обозначает поток, в который могут быть выведены сери­
ализируемые объекты. Закрытие потока вывода типа Obj ectOutputStrearn приво­
дит также к закрытию базового потока, определяемого аргументом поток_вывода.
Метод	Описание
void close()	закрывает поток
void flush()	сбрасывает содержимое буфера в выходной поток и очищает его
void write(byte[] buf)	записывает в поток массив байтов
void write(int val)	записывает в поток один младший байт из val
void writeBoolean(boolean val)	записывает в поток значение boolean
void writeByte(int val)	записывает в поток один младший байт из val
void writeChar(int val)	записывает в поток значение типа char, представленное целочисленным значением
void writeDouble(double val)	записывает в поток значение типа double
void writeFloat(float val)	записывает в поток значение типа float
void writeInt(int val)	записывает целочисленное значение
void writeLong(long val)	записывает значение типа long
void writeShort(int val)	записывает значение типа short
void writeUTF(String str)	записывает в поток строку в кодировке UTF-8
void writeObject(Object obj)	записывает в поток отдельный объект


Интepфeйc Objectinput

Интерфейс Obj ectinput расширяет интерфейсы AutoCloseaЫe и Data
Inpu t. В нем определяются методы, перечисленные в табл. 21.9, и померживается се­
риализация объектов. Следует особо отметить метод readObj ect (),который вызы-
вается для десериализации объекта. При возникновении ошибок все методы данного
интерфейса генерируют исключение типа IOException. Метод readObj ect () мо­
жет также сгенерировать исключение типа С l as sNotFoundExcept i оп.

int	available()	
Возвращает количество байтов, которые можно прочитать без блокировки.
void	close()	
Закрывает входной поток.
int	read()	
Считывает байт данных.
int	read​(byte[] b)	
Читает в массив байтов.
int	read​(byte[] b, int off, int len)	
Читает в массив байтов.
Object	readObject()	
Прочитать и вернуть объект.
long	skip​(long n)	
Пропускает n байтов ввода.



KлaccObjectinputStream

Этот класс расширяет класс InputStream и реализует интерфейс Object
Input. Класс ObjectinputStream отвечает за ввод объектов из потока. Ниже
приведен конструктор этого класса.
ObjectinputStream(InputStream поток_ввода) throws IOException
Аргумент поток_ввода обозначает поток, из которого должен быть введен
сериализированный объект. Закрытие потока ввода типа Obj ectinputStream
приводит также к закрытию базового потока ввода, определяемого аргументом
поток_ввода.

int read()	чтение одного байта; возвращает его целочисленное представление
boolean readBoolean()	чтение одного значения boolean
byte readByte()	чтение одного байта
char readChar()	чтение одного символ char
double readDouble()	чтение значения типа double
float readFloat()	чтение значения типа float
int readInt()	чтение целочисленного значения int
long readLong()	чтение значения типа long
short readShort()	чтение значения типа short
String readUTF()	чтение строки в кодировке UTF-8
Object readObject()	чтение объекта
int skipBytes(int len)	пропуск при чтении нескольких байт, количество которых равно len
int available()	чтение количества доступных для чтения байт
void close()	закрытие потока



















