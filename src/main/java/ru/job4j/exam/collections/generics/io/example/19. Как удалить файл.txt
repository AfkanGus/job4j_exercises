19. Как удалиь файл
Удаление файла.
Удалить файл или директорию можно с помощью метода delete(). Каталог можно удалить, только если он пустой!
file.delete(); 
directory.delete(); 
Также класс File содержит метод deleteOnExit(), который не удаляет файл сразу, а удалит его по завершении работы программы.
file.deleteOnExit();
метит удаление файла или каталога, обозначенный этим абстрактным путем, при завершении работы виртуальной машины. Файлы (или каталоги) удаляются в порядке, обратном их регистрации. Вызов этого метода для удаления файла или каталога, которые уже зарегистрированы для удаления, не имеет никакого эффекта. Попытка удаления будет предпринята только для нормального завершения работы виртуальной машины, как определено в Спецификации языка Java. После того, как было запрошено удаление, отменить запрос невозможно. Поэтому этот метод следует использовать с осторожностью. Примечание: этот метод не следует использовать для блокировки файлов, так как полученный в результате протокол не может работать надежно.

public class DeleteDirectoryOnExitExample {
    public static void main(String[] args) throws IOException {
        File file = new File("path/to/file.txt");
        boolean created = file.createNewFile();
        if (created) {
            System.out.println("Файл создан успешно.");
        } else {
            System.out.println("Не удалось создать файл.");
        }

        File directory = new File("path/to");
        directory.deleteOnExit();
        
        file.deleteOnExit();
        System.out.println("Файл и директория помечены для удаления при завершении программы.");
    }
В этом обновленном примере сначала создается файл file.txt, а затем создается объект File для представления директории to. Метод deleteOnExit() вызывается для пометки директории to для удаления при завершении программы.
После этого вызывается file.deleteOnExit() для пометки файла file.txt для удаления. Затем выводится сообщение о том, что файл и директория помечены для удаления.
Обратите внимание, что точное время удаления файлов и директорий может варьироваться в зависимости от окружения выполнения программы.
Удаление файла.
Удалить файл можно с помощью метода Files.delete().
public class PathExample {
    public static void main(String[] args) throws IOException {
        Path dir = Paths.get("path/paths");
        Files.createDirectories(dir);
        Path path = Path.of("path/paths/path.txt");
        Files.createFile(path);
        Files.delete(dir);
    }
}
Метод Files.delete() в отличие от File.delete() выдаст полезную информацию в виде исключения, если указанный объект не будет удален. В данном примере мы пытаемся удалить директорию, в которой лежит файл, поэтому выбрасывается исключение:


