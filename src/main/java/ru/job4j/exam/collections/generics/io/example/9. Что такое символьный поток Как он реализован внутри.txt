9. Что такое символьный поток. Как он реализован внутри

Символьный поток (Character Stream) в Java представляет собой последовательность символов, которую можно использовать для чтения или записи текстовых данных. Он предназначен для работы с символьными данными, такими как текстовые файлы, и обеспечивает правильное кодирование символов, что делает его более подходящим для работы с текстом, включая различные наборы символов и кодировки.

Символьные потоки реализованы через классы из пакета java.io, а базовыми классами для работы с символьными потоками являются Reader (для чтения) и Writer (для записи).

Как и в случае с байтовыми потоками, давайте рассмотрим, как символьный поток обычно реализован внутри.

Символьный ввод (Reader):
Reader (абстрактный класс): Это базовый класс для всех классов символьного ввода. У него есть методы, такие как read(), read(char[] buffer), close(), и другие.

FileReader: Этот класс предназначен для чтения данных из текстового файла. Он открывает символьный поток для чтения из файла.

BufferedReader: Этот класс предоставляет буферизованную обертку над другим символьным входным потоком. Он повышает эффективность операций чтения за счет буферизации.

Символьный вывод (Writer):
Writer (абстрактный класс): Это базовый класс для всех классов символьного вывода. Он содержит методы, такие как write(int c), write(char[] buffer), flush(), close(), и другие.

FileWriter: Этот класс предназначен для записи данных в текстовый файл. Он открывает символьный поток для записи в файл.

BufferedWriter: Этот класс предоставляет буферизованную обертку над другим символьным выходным потоком. Он повышает эффективность операций записи за счет буферизации.