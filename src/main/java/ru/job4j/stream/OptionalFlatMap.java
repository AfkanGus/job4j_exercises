package ru.job4j.stream;

import java.util.List;
import java.util.Optional;
/**
 * 7.1. Optional и Stream. Метод flatMap()
 * Иногда может возникнуть такая ситуация. У вас есть метод поиска пользователя, который возвращает Optional из User.
 * Вам нужно получить только счета пользователя, которые хранятся его в учетной записи (у пользователя одна учетная
 * запись, а в ней есть список счетов). Если вам нужно как-то обработать счета пользователя, то можно сделать
 * преобразование из одного Optional в другой Optional методом flatMap, который есть в Optional. Данный метод
 * производит преобразование только если существует значение в Optional, иначе возвращает пустой Optional. В нашем
 * случае можно поступить так
 * <p>
 * findUserById(id) // находим пользователя
 * <p>
 * .flatMap(u -> Optional.of(u.getAccount())) // получаем его учетную запись
 * <p>
 * .stream().flatMap(a -> a.getBillings().stream) // получаем стрим из записи и берем ее счета
 * <p>
 * .collect(Collectors.toList()); // собираем в список
 * <p>
 * Как видим описываемый метод позволяет нам работать в стриме непрерывно, т.е. не прописывать отдельные условия
 * <p>
 * Ваша задача найти первую строку, которая кончается на ".java" и вернуть Optional из длины этой строки
 */
public class OptionalFlatMap {
    public static Optional<Integer> flatMap(List<String> strings) {
        return strings.stream()
                .filter(s -> s.endsWith(".java")) // фильтруем строки, чтобы остались только те, что заканчиваются на ".java"
                .map(String::length) // преобразуем каждую строку в ее длину
                .findFirst(); // находим первую подходящую строку, если она есть
    }
}
