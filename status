[1mdiff --git a/src/main/java/ru/job4j/exam/collections/generics/io/ArgsName.java b/src/main/java/ru/job4j/exam/collections/generics/io/ArgsName.java[m
[1mindex 5a6c4ca..130263d 100644[m
[1m--- a/src/main/java/ru/job4j/exam/collections/generics/io/ArgsName.java[m
[1m+++ b/src/main/java/ru/job4j/exam/collections/generics/io/ArgsName.java[m
[36m@@ -4,7 +4,7 @@[m [mimport java.util.HashMap;[m
 import java.util.Map;[m
 [m
 public class ArgsName {[m
[31m-    private final Map<String, String> values = new HashMap<>();[m
[32m+[m[32m    public final Map<String, String> values = new HashMap<>();[m
 [m
     public String get(String key) {[m
         if (!values.containsKey(key)) {[m
[36m@@ -27,7 +27,7 @@[m [mpublic class ArgsName {[m
     }[m
 [m
     public static ArgsName of(String[] args) {[m
[31m-        validator(args);[m
[32m+[m[32m        validate(args);[m
         // –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç —É—Å–ø–µ—à–Ω–æ, —Ç–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä[m
         // –∫–ª–∞—Å—Å–∞ ArgsName —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ new, –∏ –∑–∞—Ç–µ–º –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ parse(args),[m
         // –∫–æ—Ç–æ—Ä—ã–π –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏ —Ä–∞–∑–±–∏—Ä–∞–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç[m
[36m@@ -42,7 +42,7 @@[m [mpublic class ArgsName {[m
     validator(args), –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤[m
      –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º –∏ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤ —Å–ª—É—á–∞–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è —ç—Ç–∏—Ö –ø—Ä–∞–≤–∏–ª[m
      */[m
[31m-    private static void validator(String[] args) {[m
[32m+[m[32m    private static void validate(String[] args) {[m
         if (args.length == 0) {[m
             throw new IllegalArgumentException("Arguments not passed to program");[m
         }[m
[36m@@ -59,6 +59,7 @@[m [mpublic class ArgsName {[m
             if (arg.indexOf("=") == 1) {[m
                 throw new IllegalArgumentException("Error: This argument '%s' does not contain a key".formatted(arg));[m
             }[m
[32m+[m
         }[m
     }[m
 [m
[1mdiff --git a/src/main/java/type/Task17.java b/src/main/java/type/Task17.java[m
[1mindex 99f8033..ca56f1c 100644[m
[1m--- a/src/main/java/type/Task17.java[m
[1m+++ b/src/main/java/type/Task17.java[m
[36m@@ -17,6 +17,5 @@[m [mpublic class Task17 {[m
         double area = 0.5 * (base * height);[m
         double perimetr = 2 * (base + height);[m
         System.out.print(area + System.lineSeparator().replace(',', '.') + perimetr);[m
[31m-[m
     }[m
 }[m
[1mdiff --git a/src/main/java/type/Task18.java b/src/main/java/type/Task18.java[m
[1mindex 48b9628..47e4bc5 100644[m
[1m--- a/src/main/java/type/Task18.java[m
[1m+++ b/src/main/java/type/Task18.java[m
[36m@@ -5,17 +5,15 @@[m [mpackage type;[m
 –ö–æ–º–ø–∞–Ω–∏—è –ø–æ –ø—Ä–æ–¥–∞–∂–µ –Ω–∞–ø–∏—Ç–∫–æ–≤ –ø—Ä–æ–≤–æ–¥–∏—Ç –∫–æ–Ω–∫—É—Ä—Å "–ë–∞–ª–ª –ø–æ–¥ –∫—Ä—ã—à–∫–æ–π":[m
  –Ω–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å—Ç–æ—Ä–æ–Ω–µ –ø—Ä–æ–±–æ–∫, –∫–æ—Ç–æ—Ä—ã–º–∏ –∑–∞–∫—Ä—ã—Ç—ã –±—É—Ç—ã–ª–∫–∏, –≤—ã–ø—É—Å–∫–∞–µ–º—ã–µ –∫–æ–º–ø–∞–Ω–∏–µ–π,[m
  –Ω–∞–ø–µ—á–∞—Ç–∞–Ω—ã –ø—Ä–∏–∑–æ–≤—ã–µ –±–∞–ª–ª—ã. –ï—Å—Ç—å –ø—Ä–æ–±–∫–∏, "—Ä–∞–≤–Ω—ã–µ" 10, 100 –∏ 1000 –±–∞–ª–ª–∞–º.[m
[31m-[m
 –ù–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –º–µ—Ç–æ–¥ capSum(int tens, int hundreds, int thousands),[m
 –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π 3 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –æ–∑–Ω–∞—á–∞—é—â–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—ã—à–µ–∫ –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞:[m
  tens - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫—Ä—ã—à–µ–∫ —Å 10 –±–∞–ª–ª–∞–º–∏, hundreds - —Å–æ 100, thousands - —Å 1000.[m
[31m-[m
 –ó–∞–¥–∞–Ω–∏–µ: –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å—É–º–º—É –±–∞–ª–ª–æ–≤ —Å–æ –≤—Å–µ—Ö –∫—Ä—ã—à–µ–∫.[m
[31m-[m
 –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ü–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç—Å—è, —á—Ç–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –≤—Ö–æ–¥—è—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Ü–µ–ª—ã–µ –Ω–µ–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞.[m
  */[m
 public class Task18 {[m
     public static int capSum(int tens, int hundreds, int thousands) {[m
[31m-        return tens * 10 + hundreds * 100 + thousands * 1000;[m
[32m+[m[32m        System.out.println(capSum(1, 2, 3));[m
[32m+[m[32m        return tens * 10 + hundreds * 100 + thousands * 300;[m
     }[m
 }[m
[1mdiff --git a/src/main/java/type/Task26.java b/src/main/java/type/Task26.java[m
[1mindex 4a77bd6..bb31932 100644[m
[1m--- a/src/main/java/type/Task26.java[m
[1m+++ b/src/main/java/type/Task26.java[m
[36m@@ -19,7 +19,7 @@[m [mpublic class Task26 {[m
     public static void transform(int number) {[m
         int num1, num2;[m
         num1 = (number % 10);[m
[31m-        num2 = (number) / 10 + 8;[m
[32m+[m[32m        num2 = (number) / 10;[m
         System.out.println(num1 * 10 + num2);[m
     }[m
 }[m
[1mdiff --git a/src/test/java/type/Task20Test.java b/src/test/java/type/Task20Test.java[m
[1mindex d8d7e8a..06d7d0d 100644[m
[1m--- a/src/test/java/type/Task20Test.java[m
[1m+++ b/src/test/java/type/Task20Test.java[m
[36m@@ -28,6 +28,7 @@[m [mpublic class Task20Test {[m
         String expected = "3 6" + ln;[m
         assertThat(out.toString(), is(expected));[m
     }[m
[32m+[m
     @Test[m
     public void when11Then1And1() {[m
         ByteArrayOutputStream out = new ByteArrayOutputStream();[m
